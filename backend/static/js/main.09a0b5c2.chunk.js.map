{"version":3,"sources":["components/records/fullRecord/fullRecordRead/fullRecordRead.module.css","components/records/fullRecord/fullRecordUpdateCreate/fullRecordUpdateCreate.module.css","components/records/fullRecord/fullRecordBase.module.css","components/general/header/header.module.css","components/records/Records.module.css","components/records/addRecordCard/addRecordCard.module.css","components/some_stuff/loading_page_animation/AnimatedPageLoading.module.css","components/records/recordCard/RecordCard.module.css","components/some_stuff/loading_records_animation/AnimatedRecordsLoading.module.css","components/accounts/Register.js","components/records/fullRecord/fullRecordUpdateCreate/fullRecordUpdateCreate.js","components/records/fullRecord/fullRecordRead/fullRecordRead.js","redux/reducers/showDetailedRecord.js","redux/reducers/createUpdateDeleteRecord.js","redux/reducers/allRecordReducer.js","redux/reducers/authReducers.js","components/accounts/Login.js","components/some_stuff/loading_page_animation/AnimatedPageLoading.js","components/PrivateRout/PrivateRout.js","redux/store.js","components/general/header/header.js","components/records/recordCard/RecordCard.js","components/records/addRecordCard/addRecordCard.js","components/records/fullRecord/fullRecordBase.js","components/some_stuff/loading_records_animation/AnimatedRecordsLoading.js","components/records/Records.js","components/general/mainPage.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Register","state","username","email","password","password2","onSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","password1","catch","er","alert","onChange","setState","target","name","value","this","props","isAuthenticated","to","className","type","Component","connect","authToken","auth","token","dispatch","createRecord","title","updateRecord","id","today","Date","curDate","getFullYear","getMonth","getDate","titleRef","React","createRef","bodyRef","s","inner","topPanel","placeholder","titleInput","max","ref","defaultValue","buttonBlock","saveButton","onClick","_title","current","_body","textContent","onUpdate","onSubmitButtonClick","bodyBlock","contentEditable","data-placeholder","bodyInput","deleteRecord","showUpdateWindow","recordTitle","buttonsBlock","manageButton","recordBody","buttonPanel","createdAt","created","SHOW_READ_RECORD","SHOW_WRITE_RECORD","HIDE_RECORD","initialState","fullRecordActive","detailWindowContent","hideDetailWindow","content","CREATE_RECORD","DELETE_RECORD","UPDATE_RECORD","axios","delete","then","r","err","post","res","requestBody","put","GET_RECORDS","LOADING_RECORDS","CLEAR_THE_STATE","records","Set","current_page","loading","USER_LOADING","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","localStorage","getItem","isLoading","user","Login","login","json","data","payload","AnimatedPageLoading","component","rest","render","store","createStore","combineReducers","action","recordsData","length","cur_records","cur_page","concat","setItem","key","removeItem","showHideRecord","createUpdateDeleteRecord","applyMiddleware","thunk","logout","header","logo","logoutButton","showThisWindow","showReadRecordWindow","record","card","add_sign","active","child","hideWindow","overflow","stopPropagation","AnimatedRecordsLoading","fetchRecords","page","get","response","observer","useRef","fetchNewRecords","lastRecordRef","useCallback","node","disconnect","IntersectionObserver","entries","isIntersecting","observe","recordsBlock","map","el","index","render_records","MainPage","App","useEffect","getState","status","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.09a0b5c2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"topPanel\":\"fullRecordRead_topPanel__l2ur3\",\"buttonsBlock\":\"fullRecordRead_buttonsBlock__3yfk7\",\"manageButton\":\"fullRecordRead_manageButton__2GM1w\",\"recordTitle\":\"fullRecordRead_recordTitle__2i-_p\",\"recordBody\":\"fullRecordRead_recordBody__kGYWa\",\"buttonPanel\":\"fullRecordRead_buttonPanel__3RsGx\",\"createdAt\":\"fullRecordRead_createdAt__ihhIJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inner\":\"fullRecordUpdateCreate_inner__2QqHa\",\"topPanel\":\"fullRecordUpdateCreate_topPanel__3nHhu\",\"bodyBlock\":\"fullRecordUpdateCreate_bodyBlock__2zszO\",\"titleInput\":\"fullRecordUpdateCreate_titleInput__21Xnx\",\"bodyInput\":\"fullRecordUpdateCreate_bodyInput__cGwsI\",\"buttonBlock\":\"fullRecordUpdateCreate_buttonBlock__AKFhf\",\"saveButton\":\"fullRecordUpdateCreate_saveButton__2hfMD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overflow\":\"fullRecordBase_overflow__J6t8D\",\"active\":\"fullRecordBase_active__2kLFt\",\"record\":\"fullRecordBase_record__CuQP0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__3zIYV\",\"logo\":\"header_logo__1OAXh\",\"logoutButton\":\"header_logoutButton__oObBh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"records\":\"Records_records__2azxT\",\"recordsBlock\":\"Records_recordsBlock__2z3pC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"addRecordCard_card__2qgKP\",\"add_sign\":\"addRecordCard_add_sign__1I9Sw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lds-ring\":\"AnimatedPageLoading_lds-ring__1sRyI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"record\":\"RecordCard_record__2gN3b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lds-ellipsis\":\"AnimatedRecordsLoading_lds-ellipsis__1C7zP\",\"lds-ellipsis1\":\"AnimatedRecordsLoading_lds-ellipsis1__3UTCj\",\"lds-ellipsis2\":\"AnimatedRecordsLoading_lds-ellipsis2__3S3se\",\"lds-ellipsis3\":\"AnimatedRecordsLoading_lds-ellipsis3__1v65G\"};","import React, {Component} from 'react';\nimport {Link, Redirect} from \"react-router-dom\";\nimport PropTypes from 'prop-types';\n\nexport class Register extends Component {\n    state = {\n        username: '',\n        email: '',\n        password: '',\n        password2: '',\n    }\n\n    static propTypes = {\n        // register: PropTypes.func.isRequired,\n        isAuthenticated: PropTypes.bool,\n    };\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        const { username, email, password, password2 } = this.state;\n        if (password !== password2) {\n\n        } else {\n            fetch('http://localhost:8000/api/v1/rest-auth/registration/', {\n                method: 'POST',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    username: username,\n                    email: email,\n                    password1: password,\n                    password2: password\n                })\n            }).catch(er => alert(er))\n        }\n    };\n\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\n\n\n    render() {\n        if (this.props.isAuthenticated) {\n            return <Redirect to=\"/\" />;\n        }\n        const { username, email, password, password2 } = this.state;\n        return (\n            <div className=\"col-md-3 m-auto\">\n                <div className=\"card card-body mt-5\">\n                    <h2 className=\"text-center\">Register</h2>\n                    <form onSubmit={this.onSubmit}>\n                        <div className=\"form-group\">\n                            <label>Username</label>\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                name=\"username\"\n                                onChange={this.onChange}\n                                value={username}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Email</label>\n                            <input\n                                type=\"email\"\n                                className=\"form-control\"\n                                name=\"email\"\n                                onChange={this.onChange}\n                                value={email}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Password</label>\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                name=\"password\"\n                                onChange={this.onChange}\n                                value={password}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Confirm Password</label>\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                name=\"password2\"\n                                onChange={this.onChange}\n                                value={password2}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <button type=\"submit\" className=\"btn btn-primary\">\n                                Register\n                            </button>\n                        </div>\n                        <p>\n                            Already have an account? <Link to=\"/login\">Login</Link>\n                        </p>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Register;","import s from './fullRecordUpdateCreate.module.css'\nimport React from 'react'\nimport {connect} from 'react-redux'\nimport {createRecord, updateRecord} from \"../../../../redux/reducers/createUpdateDeleteRecord\";\n\nconst FullRecordUpdateCreate = (props) => {\n    let today = new Date();\n    let curDate = today.getFullYear() + '-' + today.getMonth() + '-' + today.getDate();\n\n    let titleRef = React.createRef()\n    let bodyRef = React.createRef()\n\n    let onSubmitButtonClick = (e) => {\n        // alert(`Body in the component: ${bodyRef.current.textContent}`)\n        let _title = titleRef.current.value\n        let _body = bodyRef.current.textContent\n\n        if(props.onUpdate)\n            props.updateRecord({title: _title, body: _body, authToken: props.authToken, id: props.id})\n        else\n            props.createRecord({title: _title, body: _body, authToken: props.authToken})\n    }\n\n    return (\n        <div className={s.inner}>\n            <div className={s.topPanel}>\n                <input placeholder={curDate}\n                       className={s.titleInput}\n                       max={128}\n                       ref={titleRef}\n                       defaultValue={props.title ? props.title : null} />\n\n                <div className={s.buttonBlock}>\n                    <button className={'btn btn-success ' + s.saveButton} onClick={e => onSubmitButtonClick(e)}>Save</button>\n                </div>\n            </div>\n            <hr/>\n            <div className={s.bodyBlock}>\n                <div contentEditable={\"true\"} data-placeholder={'Here goes my day'} className={s.bodyInput} ref={bodyRef}>\n                    {props.body ? props.body : null}\n                </div>\n            </div>\n        </div>\n\n\n    )\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        authToken: state.auth.token\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        createRecord: ({title, body, authToken}) => dispatch(createRecord({title, body, authToken})),\n        updateRecord: ({title, body, authToken, id}) => dispatch(updateRecord({title, body, authToken, id}))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FullRecordUpdateCreate);","import s from './fullRecordRead.module.css'\nimport React from 'react'\nimport {connect} from 'react-redux'\nimport {deleteRecord} from \"../../../../redux/reducers/createUpdateDeleteRecord\";\nimport {showUpdateWindow} from \"../../../../redux/reducers/showDetailedRecord\";\n\nconst FullRecordRead = (props) => {\n    let deleteInstance = () => {\n        props.deleteRecord({id: props.id, authToken: props.authToken})\n    }\n\n    function updateInstance() {\n        props.showUpdateWindow({title: props.title, body: props.body, id: props.id})\n    }\n\n    return (\n        <div>\n            <div className={s.topPanel}>\n                <h2 className={s.recordTitle}>{props.title}</h2>\n\n                <div className={s.buttonsBlock}>\n                    <button className={'btn btn-primary ' + s.manageButton} onClick={updateInstance}>Edit</button>\n                    <button className={'btn btn-danger ' + s.manageButton} onClick={deleteInstance}>Delete</button>\n                </div>\n            </div>\n            <hr/>\n            <div className={s.recordBody}>\n                {props.body}\n            </div>\n\n            <div className={s.buttonPanel}>\n                    <div className={s.createdAt}>\n                        {props.created}\n                    </div>\n                </div>\n        </div>\n    )\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        authToken: state.auth.token\n    }\n}\n\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        deleteRecord: ({id, authToken}) => dispatch(deleteRecord({id, authToken})),\n        showUpdateWindow: ({title, body, id}) => dispatch(showUpdateWindow({title, body, id}))\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FullRecordRead);\n","import FullRecordUpdateCreate from \"../../components/records/fullRecord/fullRecordUpdateCreate/fullRecordUpdateCreate\";\nimport FullRecordRead from \"../../components/records/fullRecord/fullRecordRead/fullRecordRead\";\nexport const SHOW_READ_RECORD = 'SHOW_READ_RECORD'\nexport const SHOW_WRITE_RECORD = 'SHOW_WRITE_RECORD'\n\n\nexport const HIDE_RECORD = 'HIDE_RECORD'\n\nconst initialState = {\n    fullRecordActive: false,\n    detailWindowContent: null\n}\n\nexport let hideDetailWindow = (dispatch) => {\n    dispatch({type: HIDE_RECORD})\n}\n\nexport let showReadRecordWindow = ({title, body, id, created}) => (dispatch) => {\n    dispatch({\n        type: SHOW_READ_RECORD,\n        content: <FullRecordRead body={body} title={title} created={created} id={id} />\n    })\n}\n\nexport let showCreateRecordWindow = () => (dispatch) => {\n    dispatch({type: HIDE_RECORD})\n\n    dispatch({\n        type: SHOW_WRITE_RECORD,\n        content: <FullRecordUpdateCreate onUpdate={false} />\n    })\n}\n\nexport let showUpdateWindow = ({title, body, id}) => (dispatch) => {\n    dispatch({type: HIDE_RECORD})\n\n    dispatch({\n        type: SHOW_WRITE_RECORD,\n        content: <FullRecordUpdateCreate onUpdate={true} title={title} body={body} id={id} />\n    })\n}\n\n\nexport let showHideRecord = (state=initialState, action) => {\n    switch (action.type){\n        case SHOW_READ_RECORD:\n            return {\n                ...state,\n                fullRecordActive: true,\n                detailWindowContent: action.content\n            }\n        case SHOW_WRITE_RECORD:\n            return {\n                ...state,\n                fullRecordActive: true,\n                detailWindowContent: action.content\n            }\n        case HIDE_RECORD:\n            return {\n                ...state,\n                fullRecordActive: false,\n                detailWindowContent: null\n            }\n        default:\n            return {\n                ...state\n            }\n    }\n}","import axios from 'axios'\n\nimport { HIDE_RECORD } from \"./showDetailedRecord\";\n\n\nexport const CREATE_RECORD = 'CREATE_RECORD'\nexport const DELETE_RECORD = 'DELETE_RECORD'\nexport const UPDATE_RECORD = 'UPDATE_RECORD'\n\nlet initialState = {}\n\nexport let deleteRecord = ({id, authToken}) => (dispatch) => {\n    axios.delete('http://127.0.0.1:8000/api/v1/records/' + id, {\n        headers: {\n            'Authorization': `Token ${authToken}`\n        }\n    }).then(r => dispatch({type: DELETE_RECORD}))\n      .catch(err => alert(`Error: ${err}`))\n\n    dispatch({type: HIDE_RECORD})\n}\n\nexport let createRecord = ({title, body, authToken}) => (dispatch) => {\n    const headers = {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${authToken}`\n    }\n    axios.post('http://127.0.0.1:8000/api/v1/records', JSON.stringify({title: title, body: body}), {headers: headers})\n        .then(res => dispatch({type: CREATE_RECORD}))\n\n    dispatch({type: HIDE_RECORD})\n}\n\nexport let updateRecord = ({title, body, id, authToken}) => (dispatch) => {\n    let requestBody = JSON.stringify({title: title, body: body})\n    axios.put('http://127.0.0.1:8000/api/v1/records/' + id, requestBody, {\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Token ${authToken}`\n        }\n    }).then(res => dispatch({type: UPDATE_RECORD}))\n\n    dispatch({type: HIDE_RECORD})\n}\n\nexport let createUpdateDeleteRecord = (state=initialState, action) => {\n    switch (action.type){\n        case CREATE_RECORD:\n        case UPDATE_RECORD:\n        case DELETE_RECORD:\n            return {\n                ...state\n            }\n        default:\n            return {\n                ...state\n            }\n\n    }\n}","import {CREATE_RECORD, UPDATE_RECORD, DELETE_RECORD} from \"./createUpdateDeleteRecord\";\nimport axios from \"axios\";\n\nconst GET_RECORDS = 'GET_RECORDS'\nconst LOADING_RECORDS = 'LOADING_RECORDS'\nexport const CLEAR_THE_STATE = 'CLEAR_THE_STATE'\n\nconst initialState = {\n    records: [...new Set([])],\n    current_page: 0,\n    loading: false\n}\n\nexport let fetchRecords = (token, page) => {\n    return (dispatch) => {\n        axios.get('http://127.0.0.1:8000/api/v1/records?page=' + page, {\n            headers: {\n                'Authorization': `Token ${token}`\n            }\n        }).then(response => {\n            return dispatch({type: GET_RECORDS, recordsData: response.data})\n        })\n    }\n}\n\nexport let allRecords = (state=initialState, action) => {\n    switch (action.type){\n        case LOADING_RECORDS:\n            return {\n                ...state,\n                loading: true\n            }\n        case GET_RECORDS:\n            if(action.recordsData.length === 0)\n                return {\n                    ...state,\n                    loading: false\n                }\n\n            let cur_records = state.records\n            let cur_page = state.current_page\n            return {\n                ...state,\n                records: [... new Set(cur_records.concat(action.recordsData))],\n                current_page: cur_page + 1,\n                loading: false\n            }\n        case CREATE_RECORD:\n        case UPDATE_RECORD:\n        case DELETE_RECORD:\n            return {\n                ...state,\n                records: [],\n                current_page: 0,\n                loading: false\n            }\n        case CLEAR_THE_STATE:\n            return initialState\n        default:\n            return {\n                ...state,\n                loading: false\n            }\n    }\n}","import {onBFCacheRestore} from \"web-vitals/dist/modules/lib/onBFCacheRestore\";\nimport axios from \"axios\";\nimport {CLEAR_THE_STATE} from \"./allRecordReducer\";\n\nconst USER_LOADING = 'USER_LOADING'\nconst USER_LOADED = 'USER_LOADED'\nconst AUTH_ERROR = ' AUTH_ERROR'\n\nconst LOGIN_SUCCESS = 'LOGIN_SUCCESS'\nconst LOGIN_FAIL = 'LOGIN_FAIL'\nconst LOGOUT = 'LOGOUT'\n\nconst initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    isLoading: false,\n    user: null\n}\n\n// CHECK THE TOKEN AND LOAD THE USER\nexport const loadUser = () => (dispatch, getState) => {\n    dispatch({type: USER_LOADING})\n\n    const headers = {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n    }\n\n    const token = getState().auth.token;\n    if(token){\n        headers['Authorization'] = `Token ${token}`\n    }\n\n    fetch('http://127.0.0.1:8000/api/v1/rest-auth/user', {\n        method: 'GET',\n        headers: headers\n    }).then(res => {\n        if(res.status === 200)\n            dispatch({type: USER_LOADED, payload: res.json()})\n        else\n            dispatch({type: AUTH_ERROR })\n    }).catch(er => {\n        dispatch({type: AUTH_ERROR})\n    })\n}\n\n// LOGIN\nexport const login = (username, password) => (dispatch) => {\n    dispatch({type: USER_LOADING})\n    const headers = {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n    }\n\n    // REQUEST BODY\n    const body = JSON.stringify({\n        username,\n        password,\n        email: ''\n    })\n\n    fetch('http://127.0.0.1:8000/api/v1/rest-auth/login/', {\n        method: 'POST',\n        headers: headers,\n        body: body\n    }).then(res => res.json())\n      .then(data => {\n        dispatch({ type: LOGIN_SUCCESS, payload: data })\n    }).catch(err => {\n        dispatch({type: LOGIN_FAIL})\n    })\n}\n\n// LOGOUT\nexport const logout = (authToken) => (dispatch) => {\n    dispatch({type: CLEAR_THE_STATE})\n    dispatch({type: USER_LOADING})\n    axios.post('http://127.0.0.1:8000/api/v1/rest-auth/logout/', {}, {\n        headers: {\n            'Authorization': `Token ${authToken}`\n        }\n    }).then(res => dispatch({type: LOGOUT}))\n}\n\n// REDUCER\nexport function auth (state=initialState, action){\n    // alert(`${action.type} ${action.payload ? action.payload.key : action.payload}`)\n    switch (action.type){\n        case USER_LOADING:\n            return {\n                ...state,\n                isLoading: true,\n                isAuthenticated: false\n            }\n        case USER_LOADED:\n            return {\n                ...state,\n                isAuthenticated: true,\n                isLoading: false,\n                user: action.payload\n            }\n        case LOGIN_SUCCESS:\n            localStorage.setItem('token', action.payload.key)\n            return {\n                ...state,\n                token: action.payload.key,\n                isAuthenticated: true,\n                isLoading: false\n            }\n        case AUTH_ERROR:\n        case LOGIN_FAIL:\n        case LOGOUT:\n            localStorage.removeItem('token')\n            return {\n                ...state,\n                token: null,\n                user: null,\n                isAuthenticated: false,\n                isLoading: false\n            }\n        default:\n            return state\n    }\n}\n\n\n","import React, {Component} from 'react';\nimport {Link, Redirect} from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {login} from \"../../redux/reducers/authReducers\";\n\nclass Login extends Component {\n    state = {\n        username: '',\n        password: '',\n    }\n\n    static propTypes = {\n        login: PropTypes.func.isRequired,\n        isAuthenticated: PropTypes.bool,\n    };\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        this.props.login(this.state.username, this.state.password)\n    };\n\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\n\n\n    render() {\n        if (this.props.isAuthenticated) {\n            return <Redirect to=\"/\" />;\n        }\n        const { username, password } = this.state;\n        return (\n            <div className=\"col-md-3 m-auto\">\n                <div className=\"card card-body mt-5\">\n                    <h2 className=\"text-center\">Login</h2>\n                    <form onSubmit={this.onSubmit}>\n                        <div className=\"form-group\">\n                            <label>Username</label>\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                name=\"username\"\n                                onChange={this.onChange}\n                                value={username}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Password</label>\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                name=\"password\"\n                                onChange={this.onChange}\n                                value={password}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <button type=\"submit\" className=\"btn btn-primary\">\n                                Login\n                            </button>\n                        </div>\n                        <p>\n                            A new user? <Link to=\"/register\">Register</Link>\n                        </p>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        isAuthenticated: state.auth.isAuthenticated\n    }\n}\n\nexport default connect(mapStateToProps, {login})(Login);","import React from 'react'\nimport s from './AnimatedPageLoading.module.css'\n\nlet AnimatedPageLoading = () => {\n    return (\n        <div className={s['lds-ring']}>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n        </div>\n    )\n}\n\nexport default AnimatedPageLoading;","import React from 'react';\nimport {Route, Redirect} from 'react-router-dom';\nimport {connect} from \"react-redux\";\nimport AnimatedPageLoading from \"../some_stuff/loading_page_animation/AnimatedPageLoading\";\n\nlet PrivateRout = ({component: Component, auth, ...rest}) => {\n    return (\n        <Route {...rest}\n               render={props => {\n                   if(auth.isLoading){\n                       return <AnimatedPageLoading />\n                   }else if(!auth.isAuthenticated){\n                        return <Redirect to={'/login'} />\n                   }else{\n                       return <Component {...props} />\n                   }\n               }} />\n    )\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        auth: state.auth\n    }\n}\n\nexport default connect(mapStateToProps)(PrivateRout);","import {createStore, combineReducers, applyMiddleware} from 'redux'\nimport {allRecords} from './reducers/allRecordReducer'\nimport { auth } from './reducers/authReducers'\nimport {createUpdateDeleteRecord} from \"./reducers/createUpdateDeleteRecord\";\nimport {showHideRecord} from \"./reducers/showDetailedRecord\";\nimport thunk from 'redux-thunk'\n\n\nlet store = createStore(\n    combineReducers({\n        records: allRecords,\n        auth: auth,\n        showHideRecord: showHideRecord,\n        createUpdateDeleteRecord: createUpdateDeleteRecord\n    }),\n    applyMiddleware(thunk)\n)\n\nexport default store;","import s from './header.module.css'\nimport React from 'react'\nimport {connect} from 'react-redux'\nimport {logout} from \"../../../redux/reducers/authReducers\";\n\n\nlet Header = (props) => {\n    return (\n        <header className={s.header}>\n            <h2 className={s.logo}>DIARY</h2>\n\n            <button className={s.logoutButton + ' btn btn-default'} onClick={() => props.logout(props.authToken)}>\n                Logout\n            </button>\n        </header>\n    )\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        authToken: state.auth.token\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        logout: (authToken) => dispatch(logout(authToken))\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)","import s from './RecordCard.module.css'\nimport React from 'react'\nimport {connect} from 'react-redux'\nimport {showReadRecordWindow} from \"../../../redux/reducers/showDetailedRecord\";\n\n\nconst RecordCard = (props) => {\n    return (\n        <div className={s.record} onClick={() => props.showThisWindow({title: props.title, body: props.body, created: props.created, id: props.id})}>\n            <h3>{props.title}</h3>\n            <p>{props.body}</p>\n        </div>\n    )\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        showThisWindow: ({title, body, created, id}) => dispatch(\n            showReadRecordWindow({title, body, created, id})\n        )\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        authToken: state.auth.token\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RecordCard);\n","import s from './addRecordCard.module.css'\nimport React from 'react'\nimport {connect} from 'react-redux'\nimport {showCreateRecordWindow } from \"../../../redux/reducers/showDetailedRecord\";\n\nconst AddRecordCard = (props) => {\n    return (\n        <div className={s.card} onClick={props.showThisWindow}>\n            <h1 className={s.add_sign}>&#x2B;</h1>\n        </div>\n    )\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        showThisWindow: () => dispatch(showCreateRecordWindow())\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        authToken: state.auth.token\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddRecordCard);","import s from './fullRecordBase.module.css'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport {hideDetailWindow} from \"../../../redux/reducers/showDetailedRecord\";\n\nconst FullRecordBase = (props) => {\n\n    return (\n        <div className={props.active ? `${s.overflow} ${s.active}` : s.overflow} onClick={() => props.hideWindow() }>\n            <div className={s.record} onClick={e => e.stopPropagation() }>\n                {props.child}\n            </div>\n        </div>\n    )\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        active: state.showHideRecord.fullRecordActive,\n        child: state.showHideRecord.detailWindowContent\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        hideWindow: () => dispatch(hideDetailWindow)\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FullRecordBase);","import React from 'react'\nimport s from './AnimatedRecordsLoading.module.css'\n\nlet AnimatedRecordsLoading = () => {\n    return (\n        <div className={s['lds-ellipsis']}>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n        </div>\n    )\n}\n\nexport default AnimatedRecordsLoading;","import s from './Records.module.css'\nimport React, {useEffect, useCallback, useRef} from 'react'\n\nimport RecordCard from \"./recordCard/RecordCard\";\nimport AddRecordCard from \"./addRecordCard/addRecordCard\";\nimport {connect} from 'react-redux'\nimport {fetchRecords} from '../../redux/reducers/allRecordReducer'\nimport FullRecordBase from \"./fullRecord/fullRecordBase\";\nimport AnimatedRecordsLoading from \"../some_stuff/loading_records_animation/AnimatedRecordsLoading\";\n\n\nconst Records = (props) => {\n    let observer = useRef()\n\n    let fetchNewRecords = () => {\n        props.fetchRecords(props.authToken, props.current_page);\n    }\n\n    let lastRecordRef = useCallback(node => {\n        if(props.loading)\n            return\n\n        if(observer.current) {\n            observer.current.disconnect()\n        }\n\n        observer.current = new IntersectionObserver(entries => {\n            if(entries[0].isIntersecting){\n                fetchNewRecords()\n            }\n        })\n\n        if (node)\n            observer.current.observe(node)\n    })\n\n    let render_records = () => {\n        if(props.records.length === 0){\n            fetchNewRecords()\n        } else {\n            return props.records.map((el, index) => {\n                if(index === props.records.length - 1) {\n                    return (\n                        <div ref={lastRecordRef}>\n                            <RecordCard title={el.title} body={el.body} created={el.created} id={el.id} />\n                        </div>\n                    )\n                }\n                else {\n                    return (\n                        <div>\n                            <RecordCard title={el.title} body={el.body} created={el.created} id={el.id} />\n                        </div>\n                    )\n                }\n            })\n        }\n    }\n\n    return (\n        <div className={s.records}>\n            <FullRecordBase />\n\n            <div className={s.recordsBlock}>\n                <AddRecordCard />\n\n                {\n                    render_records()\n                }\n\n            </div>\n\n            {props.loading && <AnimatedRecordsLoading/>}\n        </div>\n    )\n}\n\nlet mapStateToProps = (state) => {\n    return {\n    \trecords: state.records.records[0] ? state.records.records : [],\n        authToken: state.auth.token,\n        current_page: state.records.current_page,\n        loading: state.records.loading\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        fetchRecords: (token, page) => { dispatch(fetchRecords(token, page)) }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Records);\n","import React from 'react'\nimport Header from \"./header/header\";\nimport Records from \"../records/Records\";\n\n\nlet MainPage = () => {\n    return (\n        <div>\n            <Header />\n            <Records />\n        </div>\n    )\n}\n\nexport default MainPage;\n","import 'bootstrap/dist/css/bootstrap.css'\nimport {BrowserRouter, Redirect, Route} from 'react-router-dom'\nimport Register from \"./components/accounts/Register\";\nimport Login from \"./components/accounts/Login\";\nimport PrivateRout from \"./components/PrivateRout/PrivateRout\";\nimport {loadUser} from \"./redux/reducers/authReducers\";\nimport {useEffect} from \"react\";\nimport store from './redux/store'\nimport MainPage from \"./components/general/mainPage\";\n\n\nfunction App() {\n    useEffect(() => {\n        store.dispatch(loadUser())\n    })\n\n    return (\n        <BrowserRouter >\n            <div className=\"App\">\n                <PrivateRout exact path={'/'} component={MainPage} />\n                <Route exact path={'/register'} render={() => <Register />} />\n                <Route exact path={'/login'} render={() => <Login />} />\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux'\nimport store from './redux/store'\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n        document.getElementById('root')\n\n);\n\nreportWebVitals();\n"],"sourceRoot":""}
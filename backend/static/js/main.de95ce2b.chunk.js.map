{"version":3,"sources":["components/records/fullRecord/fullRecordRead/fullRecordRead.module.css","components/records/fullRecord/fullRecordUpdateCreate/fullRecordUpdateCreate.module.css","components/records/fullRecord/fullRecordBase.module.css","components/general/header/header.module.css","components/records/Records.module.css","components/records/addRecordCard/addRecordCard.module.css","components/some_stuff/notifications/Notifications.module.css","components/some_stuff/notifications/notification/Notification.module.css","components/some_stuff/loading_page_animation/AnimatedPageLoading.module.css","components/records/recordCard/RecordCard.module.css","components/some_stuff/loading_records_animation/AnimatedRecordsLoading.module.css","components/records/fullRecord/fullRecordUpdateCreate/fullRecordUpdateCreate.js","components/records/fullRecord/fullRecordRead/fullRecordRead.js","redux/reducers/showDetailedRecord.js","redux/reducers/createUpdateDeleteRecord.js","redux/reducers/allRecordReducer.js","redux/reducers/authReducers.js","components/some_stuff/notifications/notification/Notification.js","components/some_stuff/notifications/Notifications.js","components/accounts/Register.js","components/accounts/Login.js","components/some_stuff/loading_page_animation/AnimatedPageLoading.js","components/PrivateRout/PrivateRout.js","redux/store.js","components/general/header/header.js","components/records/recordCard/RecordCard.js","components/records/addRecordCard/addRecordCard.js","components/records/fullRecord/fullRecordBase.js","components/some_stuff/loading_records_animation/AnimatedRecordsLoading.js","components/records/Records.js","components/general/mainPage.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","connect","state","authToken","auth","token","dispatch","createRecord","title","body","updateRecord","id","props","today","Date","curDate","getFullYear","getMonth","getDate","titleRef","React","createRef","bodyRef","className","s","inner","topPanel","placeholder","titleInput","max","ref","defaultValue","buttonBlock","saveButton","onClick","e","_title","current","value","_body","textContent","onUpdate","onSubmitButtonClick","bodyBlock","contentEditable","data-placeholder","bodyInput","deleteRecord","showUpdateWindow","recordTitle","buttonsBlock","manageButton","recordBody","buttonPanel","createdAt","created","SHOW_READ_RECORD","SHOW_WRITE_RECORD","HIDE_RECORD","initialState","fullRecordActive","detailWindowContent","hideDetailWindow","type","content","axios","defaults","xsrfHeaderName","xsrfCookieName","CREATE_RECORD","DELETE_RECORD","UPDATE_RECORD","delete","headers","then","r","catch","err","alert","post","JSON","stringify","res","requestBody","put","GET_RECORDS","LOADING_RECORDS","CLEAR_THE_STATE","records","Set","current_page","loading","USER_LOADING","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","REGISTRATION_ERROR","localStorage","getItem","isAuthenticated","isLoading","user","errors","Notification","notification","error","notification_block","map","el","Register","username","email","password","password2","onSubmit","preventDefault","register","onChange","setState","target","name","this","to","Component","password1","payload","data","response","Login","login","AnimatedPageLoading","component","rest","render","store","createStore","combineReducers","action","recordsData","length","cur_records","cur_page","concat","setItem","key","Object","values","flat","removeItem","showHideRecord","createUpdateDeleteRecord","applyMiddleware","thunk","logout","header","logo","logoutButton","showThisWindow","showReadRecordWindow","record","card","add_sign","active","child","hideWindow","overflow","stopPropagation","AnimatedRecordsLoading","fetchRecords","page","get","observer","useRef","fetchNewRecords","lastRecordRef","useCallback","node","disconnect","IntersectionObserver","entries","isIntersecting","observe","recordsBlock","index","render_records","MainPage","App","useEffect","getState","method","status","er","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.de95ce2b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"topPanel\":\"fullRecordRead_topPanel__l2ur3\",\"buttonsBlock\":\"fullRecordRead_buttonsBlock__3yfk7\",\"manageButton\":\"fullRecordRead_manageButton__2GM1w\",\"recordTitle\":\"fullRecordRead_recordTitle__2i-_p\",\"recordBody\":\"fullRecordRead_recordBody__kGYWa\",\"buttonPanel\":\"fullRecordRead_buttonPanel__3RsGx\",\"createdAt\":\"fullRecordRead_createdAt__ihhIJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inner\":\"fullRecordUpdateCreate_inner__2QqHa\",\"topPanel\":\"fullRecordUpdateCreate_topPanel__3nHhu\",\"bodyBlock\":\"fullRecordUpdateCreate_bodyBlock__2zszO\",\"titleInput\":\"fullRecordUpdateCreate_titleInput__21Xnx\",\"bodyInput\":\"fullRecordUpdateCreate_bodyInput__cGwsI\",\"buttonBlock\":\"fullRecordUpdateCreate_buttonBlock__AKFhf\",\"saveButton\":\"fullRecordUpdateCreate_saveButton__2hfMD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overflow\":\"fullRecordBase_overflow__J6t8D\",\"active\":\"fullRecordBase_active__2kLFt\",\"record\":\"fullRecordBase_record__CuQP0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__3zIYV\",\"logo\":\"header_logo__1OAXh\",\"logoutButton\":\"header_logoutButton__oObBh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"records\":\"Records_records__2azxT\",\"recordsBlock\":\"Records_recordsBlock__2z3pC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"addRecordCard_card__2qgKP\",\"add_sign\":\"addRecordCard_add_sign__1I9Sw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification_block\":\"Notifications_notification_block__2ffSL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__197ow\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lds-ring\":\"AnimatedPageLoading_lds-ring__1sRyI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"record\":\"RecordCard_record__2gN3b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lds-ellipsis\":\"AnimatedRecordsLoading_lds-ellipsis__1C7zP\",\"lds-ellipsis1\":\"AnimatedRecordsLoading_lds-ellipsis1__3UTCj\",\"lds-ellipsis2\":\"AnimatedRecordsLoading_lds-ellipsis2__3S3se\",\"lds-ellipsis3\":\"AnimatedRecordsLoading_lds-ellipsis3__1v65G\"};","import s from './fullRecordUpdateCreate.module.css'\nimport React from 'react'\nimport {connect} from 'react-redux'\nimport {createRecord, updateRecord} from \"../../../../redux/reducers/createUpdateDeleteRecord\";\n\nconst FullRecordUpdateCreate = (props) => {\n    let today = new Date();\n    let curDate = today.getFullYear() + '-' + today.getMonth() + '-' + today.getDate();\n\n    let titleRef = React.createRef()\n    let bodyRef = React.createRef()\n\n    let onSubmitButtonClick = (e) => {\n        // alert(`Body in the component: ${bodyRef.current.textContent}`)\n        let _title = titleRef.current.value\n        let _body = bodyRef.current.textContent\n\n        if(props.onUpdate)\n            props.updateRecord({title: _title, body: _body, authToken: props.authToken, id: props.id})\n        else\n            props.createRecord({title: _title, body: _body, authToken: props.authToken})\n    }\n\n    return (\n        <div className={s.inner}>\n            <div className={s.topPanel}>\n                <input placeholder={curDate}\n                       className={s.titleInput}\n                       max={128}\n                       ref={titleRef}\n                       defaultValue={props.title ? props.title : null} />\n\n                <div className={s.buttonBlock}>\n                    <button className={'btn btn-success ' + s.saveButton} onClick={e => onSubmitButtonClick(e)}>Save</button>\n                </div>\n            </div>\n            <hr/>\n            <div className={s.bodyBlock}>\n                <div contentEditable={\"true\"} data-placeholder={'Here goes my day'} className={s.bodyInput} ref={bodyRef}>\n                    {props.body ? props.body : null}\n                </div>\n            </div>\n        </div>\n\n\n    )\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        authToken: state.auth.token\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        createRecord: ({title, body, authToken}) => dispatch(createRecord({title, body, authToken})),\n        updateRecord: ({title, body, authToken, id}) => dispatch(updateRecord({title, body, authToken, id}))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FullRecordUpdateCreate);","import s from './fullRecordRead.module.css'\nimport React from 'react'\nimport {connect} from 'react-redux'\nimport {deleteRecord} from \"../../../../redux/reducers/createUpdateDeleteRecord\";\nimport {showUpdateWindow} from \"../../../../redux/reducers/showDetailedRecord\";\n\nconst FullRecordRead = (props) => {\n    let deleteInstance = () => {\n        props.deleteRecord({id: props.id, authToken: props.authToken})\n    }\n\n    function updateInstance() {\n        props.showUpdateWindow({title: props.title, body: props.body, id: props.id})\n    }\n\n    return (\n        <div>\n            <div className={s.topPanel}>\n                <h2 className={s.recordTitle}>{props.title}</h2>\n\n                <div className={s.buttonsBlock}>\n                    <button className={'btn btn-primary ' + s.manageButton} onClick={updateInstance}>Edit</button>\n                    <button className={'btn btn-danger ' + s.manageButton} onClick={deleteInstance}>Delete</button>\n                </div>\n            </div>\n            <hr/>\n            <div className={s.recordBody}>\n                {props.body}\n            </div>\n\n            <div className={s.buttonPanel}>\n                    <div className={s.createdAt}>\n                        {props.created}\n                    </div>\n                </div>\n        </div>\n    )\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        authToken: state.auth.token\n    }\n}\n\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        deleteRecord: ({id, authToken}) => dispatch(deleteRecord({id, authToken})),\n        showUpdateWindow: ({title, body, id}) => dispatch(showUpdateWindow({title, body, id}))\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FullRecordRead);\n","import FullRecordUpdateCreate from \"../../components/records/fullRecord/fullRecordUpdateCreate/fullRecordUpdateCreate\";\nimport FullRecordRead from \"../../components/records/fullRecord/fullRecordRead/fullRecordRead\";\nexport const SHOW_READ_RECORD = 'SHOW_READ_RECORD'\nexport const SHOW_WRITE_RECORD = 'SHOW_WRITE_RECORD'\n\n\nexport const HIDE_RECORD = 'HIDE_RECORD'\n\nconst initialState = {\n    fullRecordActive: false,\n    detailWindowContent: null\n}\n\nexport let hideDetailWindow = (dispatch) => {\n    dispatch({type: HIDE_RECORD})\n}\n\nexport let showReadRecordWindow = ({title, body, id, created}) => (dispatch) => {\n    dispatch({\n        type: SHOW_READ_RECORD,\n        content: <FullRecordRead body={body} title={title} created={created} id={id} />\n    })\n}\n\nexport let showCreateRecordWindow = () => (dispatch) => {\n    dispatch({type: HIDE_RECORD})\n\n    dispatch({\n        type: SHOW_WRITE_RECORD,\n        content: <FullRecordUpdateCreate onUpdate={false} />\n    })\n}\n\nexport let showUpdateWindow = ({title, body, id}) => (dispatch) => {\n    dispatch({type: HIDE_RECORD})\n\n    dispatch({\n        type: SHOW_WRITE_RECORD,\n        content: <FullRecordUpdateCreate onUpdate={true} title={title} body={body} id={id} />\n    })\n}\n\n\nexport let showHideRecord = (state=initialState, action) => {\n    switch (action.type){\n        case SHOW_READ_RECORD:\n            return {\n                ...state,\n                fullRecordActive: true,\n                detailWindowContent: action.content\n            }\n        case SHOW_WRITE_RECORD:\n            return {\n                ...state,\n                fullRecordActive: true,\n                detailWindowContent: action.content\n            }\n        case HIDE_RECORD:\n            return {\n                ...state,\n                fullRecordActive: false,\n                detailWindowContent: null\n            }\n        default:\n            return {\n                ...state\n            }\n    }\n}","import axios from 'axios'\n\nimport { HIDE_RECORD } from \"./showDetailedRecord\";\n\naxios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\";\naxios.defaults.xsrfCookieName = \"csrftoken\";\n\nexport const CREATE_RECORD = 'CREATE_RECORD'\nexport const DELETE_RECORD = 'DELETE_RECORD'\nexport const UPDATE_RECORD = 'UPDATE_RECORD'\n\nlet initialState = {}\n\nexport let deleteRecord = ({id, authToken}) => (dispatch) => {\n    axios.delete('http://127.0.0.1:8000/api/v1/records/' + id, {\n        headers: {\n            'Authorization': `Token ${authToken}`,\n        }\n    }).then(r => dispatch({type: DELETE_RECORD}))\n      .catch(err => alert(`Error: ${err}`))\n\n    dispatch({type: HIDE_RECORD})\n}\n\nexport let createRecord = ({title, body, authToken}) => (dispatch) => {\n    const headers = {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${authToken}`\n    }\n    axios.post('http://127.0.0.1:8000/api/v1/records', JSON.stringify({title: title, body: body}), {headers: headers})\n        .then(res => dispatch({type: CREATE_RECORD}))\n\n    dispatch({type: HIDE_RECORD})\n}\n\nexport let updateRecord = ({title, body, id, authToken}) => (dispatch) => {\n    let requestBody = JSON.stringify({title: title, body: body})\n    axios.put('http://127.0.0.1:8000/api/v1/records/' + id, requestBody, {\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Token ${authToken}`\n        }\n    }).then(res => dispatch({type: UPDATE_RECORD}))\n\n    dispatch({type: HIDE_RECORD})\n}\n\nexport let createUpdateDeleteRecord = (state=initialState, action) => {\n    switch (action.type){\n        case CREATE_RECORD:\n        case UPDATE_RECORD:\n        case DELETE_RECORD:\n            return {\n                ...state\n            }\n        default:\n            return {\n                ...state\n            }\n\n    }\n}","import {CREATE_RECORD, UPDATE_RECORD, DELETE_RECORD} from \"./createUpdateDeleteRecord\";\nimport axios from \"axios\";\n\nconst GET_RECORDS = 'GET_RECORDS'\nconst LOADING_RECORDS = 'LOADING_RECORDS'\nexport const CLEAR_THE_STATE = 'CLEAR_THE_STATE'\n\nconst initialState = {\n    records: [...new Set([])],\n    current_page: 0,\n    loading: false\n}\n\nexport let fetchRecords = (token, page) => {\n    return (dispatch) => {\n        axios.get('http://127.0.0.1:8000/api/v1/records?page=' + page, {\n            headers: {\n                'Authorization': `Token ${token}`\n            }\n        }).then(response => {\n            return dispatch({type: GET_RECORDS, recordsData: response.data})\n        })\n    }\n}\n\nexport let allRecords = (state=initialState, action) => {\n    switch (action.type){\n        case LOADING_RECORDS:\n            return {\n                ...state,\n                loading: true\n            }\n        case GET_RECORDS:\n            if(action.recordsData.length === 0)\n                return {\n                    ...state,\n                    loading: false\n                }\n\n            let cur_records = state.records\n            let cur_page = state.current_page\n            return {\n                ...state,\n                records: [... new Set(cur_records.concat(action.recordsData))],\n                current_page: cur_page + 1,\n                loading: false\n            }\n        case CREATE_RECORD:\n        case UPDATE_RECORD:\n        case DELETE_RECORD:\n            return {\n                ...state,\n                records: [],\n                current_page: 0,\n                loading: false\n            }\n        case CLEAR_THE_STATE:\n            return initialState\n        default:\n            return {\n                ...state,\n                loading: false\n            }\n    }\n}","import axios from \"axios\";\nimport {CLEAR_THE_STATE} from \"./allRecordReducer\";\n\naxios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\";\naxios.defaults.xsrfCookieName = \"csrftoken\";\n\n\nconst USER_LOADING = 'USER_LOADING'\nconst USER_LOADED = 'USER_LOADED'\nconst AUTH_ERROR = ' AUTH_ERROR'\n\nconst LOGIN_SUCCESS = 'LOGIN_SUCCESS'\nconst LOGIN_FAIL = 'LOGIN_FAIL'\nconst LOGOUT = 'LOGOUT'\nconst REGISTRATION_ERROR = 'REGISTRATION_ERROR'\n\nconst initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    isLoading: false,\n    user: null,\n    errors: []\n}\n\n// CHECK THE TOKEN AND LOAD THE USER\nexport const loadUser = () => (dispatch, getState) => {\n    dispatch({type: USER_LOADING})\n\n    const headers = {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n    }\n\n    const token = getState().auth.token;\n    if(token){\n        headers['Authorization'] = `Token ${token}`\n    }\n\n    axios.get('http://127.0.0.1:8000/api/v1/rest-auth/user', {\n        method: 'GET',\n        headers: headers\n    }).then(res => {\n        if(res.status === 200)\n            dispatch({type: USER_LOADED, payload: res.data})\n        else\n            dispatch({type: AUTH_ERROR })\n    }).catch(er => er)\n}\n\n// LOGIN\nexport const login = (username, password) => (dispatch) => {\n    dispatch({type: USER_LOADING})\n    const headers = {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n    }\n\n    // REQUEST BODY\n    const body = JSON.stringify({\n        username,\n        password,\n        email: ''\n    })\n\n    axios.post('http://127.0.0.1:8000/api/v1/rest-auth/login/', body,{\n        headers: headers,\n    }).then(res => {\n        dispatch({ type: LOGIN_SUCCESS, payload: res.data })\n    }).catch(err => {\n        dispatch({type: LOGIN_FAIL})\n    })\n}\n\n// LOGOUT\nexport const logout = (authToken) => (dispatch) => {\n    dispatch({type: CLEAR_THE_STATE})\n    dispatch({type: USER_LOADING})\n    axios.post('http://127.0.0.1:8000/api/v1/rest-auth/logout/', {}, {\n        headers: {\n            'Authorization': `Token ${authToken}`\n        }\n    }).then(res => dispatch({type: LOGOUT}))\n}\n\n// REGISTER\nexport const register = (username, email, password1, password2) => (dispatch) => {\n    dispatch({type: USER_LOADING})\n\n    let body = {\n        username,\n        email,\n        password1,\n        password2\n    }\n\n    axios.post('http://127.0.0.1:8000/api/v1/rest-auth/registration/', JSON.stringify(body), {\n        headers: {\n            'Content-Type': 'application/json',\n        }\n    }).then(\n        res => dispatch({type: LOGIN_SUCCESS, payload: res.data})\n    ).catch(err => {\n        dispatch({type: REGISTRATION_ERROR, errors: err.response.data})\n    })\n\n}\n\n\n// REDUCER\nexport function auth (state=initialState, action){\n    // alert(`${action.type} ${action.payload ? action.payload.key : action.payload}`)\n    switch (action.type){\n        case USER_LOADING:\n            return {\n                ...state,\n                isLoading: true,\n                isAuthenticated: false\n            }\n        case USER_LOADED:\n            return {\n                ...state,\n                isAuthenticated: true,\n                isLoading: false,\n                user: action.payload\n            }\n        case LOGIN_SUCCESS:\n            localStorage.setItem('token', action.payload.key)\n            return {\n                ...state,\n                token: action.payload.key,\n                isAuthenticated: true,\n                isLoading: false,\n                errors: []\n            }\n        case REGISTRATION_ERROR:\n            let errors = Object.values(action.errors).flat()\n            return {\n                isAuthenticated: false,\n                isLoading: false,\n                token: null,\n                user: null,\n                errors: errors\n            }\n        case AUTH_ERROR:\n        case LOGIN_FAIL:\n            return {\n                isAuthenticated: false,\n                isLoading: false,\n                token: null,\n                user: null,\n                errors: ['Username or password is incorrect']\n            }\n        case LOGOUT:\n            localStorage.removeItem('token')\n            return {\n                ...state,\n                token: null,\n                user: null,\n                isAuthenticated: false,\n                isLoading: false\n            }\n        default:\n            return state\n    }\n}\n\n\n","import React from 'react'\nimport s from './Notification.module.css'\n\nlet Notification = (props) => {\n    return (\n        <div className={s.notification}>\n            { props.error }\n        </div>\n    )\n}\n\nexport default Notification","import React from 'react'\nimport {connect} from 'react-redux'\nimport s from './Notifications.module.css'\nimport Notification from \"./notification/Notification\";\n\n\nlet Notifications = (props) => {\n    return (\n        <div className={s.notification_block}>\n            {\n                props.errors.map(el => <Notification error={el} />)\n            }\n        </div>\n    )\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        errors: state.auth.errors[0] ? state.auth.errors : []\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Notifications)\n","import React, {Component} from 'react';\nimport {Link, Redirect} from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport { register } from \"../../redux/reducers/authReducers\";\nimport {connect} from 'react-redux'\nimport Notifications from \"../some_stuff/notifications/Notifications\";\n\nexport class Register extends Component {\n    state = {\n        username: '',\n        email: '',\n        password: '',\n        password2: '',\n    }\n\n    static propTypes = {\n        // register: PropTypes.func.isRequired,\n        isAuthenticated: PropTypes.bool,\n    };\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        const { username, email, password, password2 } = this.state;\n        if (password !== password2) {\n\n        } else {\n           this.props.register(username, email, password, password2)\n        }\n    };\n\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\n\n\n    render() {\n        if (this.props.isAuthenticated) {\n            return <Redirect to=\"/\" />;\n        }\n        const { username, email, password, password2 } = this.state;\n        return (\n            <>\n                <Notifications />\n\n                <div className=\"col-md-3 m-auto\">\n                    <div className=\"card card-body mt-5\">\n                        <h2 className=\"text-center\">Register</h2>\n                        <form onSubmit={this.onSubmit}>\n                            <div className=\"form-group\">\n                                <label>Username</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    name=\"username\"\n                                    onChange={this.onChange}\n                                    value={username}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Email</label>\n                                <input\n                                    type=\"email\"\n                                    className=\"form-control\"\n                                    name=\"email\"\n                                    onChange={this.onChange}\n                                    value={email}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Password</label>\n                                <input\n                                    type=\"password\"\n                                    className=\"form-control\"\n                                    name=\"password\"\n                                    onChange={this.onChange}\n                                    value={password}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Confirm Password</label>\n                                <input\n                                    type=\"password\"\n                                    className=\"form-control\"\n                                    name=\"password2\"\n                                    onChange={this.onChange}\n                                    value={password2}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <button type=\"submit\" className=\"btn btn-primary\">\n                                    Register\n                                </button>\n                            </div>\n                            <p>\n                                Already have an account? <Link to=\"/login\">Login</Link>\n                            </p>\n                        </form>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        isAuthenticated: state.auth.isAuthenticated\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        register: (username, email, password, password2) => dispatch(register(username, email, password, password2))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);","import React, {Component} from 'react';\nimport {Link, Redirect} from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {login} from \"../../redux/reducers/authReducers\";\nimport Notifications from \"../some_stuff/notifications/Notifications\";\n\nclass Login extends Component {\n    state = {\n        username: '',\n        password: '',\n    }\n\n    static propTypes = {\n        login: PropTypes.func.isRequired,\n        isAuthenticated: PropTypes.bool,\n    };\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        this.props.login(this.state.username, this.state.password)\n    };\n\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\n\n\n    render() {\n        if (this.props.isAuthenticated) {\n            return <Redirect to=\"/\" />;\n        }\n        const { username, password } = this.state;\n        return (\n            <>\n                <Notifications />\n                <div className=\"col-md-3 m-auto\">\n                    <div className=\"card card-body mt-5\">\n                        <h2 className=\"text-center\">Login</h2>\n                        <form onSubmit={this.onSubmit}>\n                            <div className=\"form-group\">\n                                <label>Username</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    name=\"username\"\n                                    onChange={this.onChange}\n                                    value={username}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Password</label>\n                                <input\n                                    type=\"password\"\n                                    className=\"form-control\"\n                                    name=\"password\"\n                                    onChange={this.onChange}\n                                    value={password}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <button type=\"submit\" className=\"btn btn-primary\">\n                                    Login\n                                </button>\n                            </div>\n                            <p>\n                                A new user? <Link to=\"/register\">Register</Link>\n                            </p>\n                        </form>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        isAuthenticated: state.auth.isAuthenticated\n    }\n}\n\nexport default connect(mapStateToProps, {login})(Login);","import React from 'react'\nimport s from './AnimatedPageLoading.module.css'\n\nlet AnimatedPageLoading = () => {\n    return (\n        <div className={s['lds-ring']}>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n        </div>\n    )\n}\n\nexport default AnimatedPageLoading;","import React from 'react';\nimport {Route, Redirect} from 'react-router-dom';\nimport {connect} from \"react-redux\";\nimport AnimatedPageLoading from \"../some_stuff/loading_page_animation/AnimatedPageLoading\";\n\nlet PrivateRout = ({component: Component, auth, ...rest}) => {\n    return (\n        <Route {...rest}\n               render={props => {\n                   if(auth.isLoading){\n                       return <AnimatedPageLoading />\n                   }else if(!auth.isAuthenticated){\n                        return <Redirect to={'/login'} />\n                   }else{\n                       return <Component {...props} />\n                   }\n               }} />\n    )\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        auth: state.auth\n    }\n}\n\nexport default connect(mapStateToProps)(PrivateRout);","import {createStore, combineReducers, applyMiddleware} from 'redux'\nimport {allRecords} from './reducers/allRecordReducer'\nimport { auth } from './reducers/authReducers'\nimport {createUpdateDeleteRecord} from \"./reducers/createUpdateDeleteRecord\";\nimport {showHideRecord} from \"./reducers/showDetailedRecord\";\nimport thunk from 'redux-thunk'\n\n\nlet store = createStore(\n    combineReducers({\n        records: allRecords,\n        auth: auth,\n        showHideRecord: showHideRecord,\n        createUpdateDeleteRecord: createUpdateDeleteRecord\n    }),\n    applyMiddleware(thunk)\n)\n\nexport default store;","import s from './header.module.css'\nimport React from 'react'\nimport {connect} from 'react-redux'\nimport {logout} from \"../../../redux/reducers/authReducers\";\n\n\nlet Header = (props) => {\n    return (\n        <header className={s.header}>\n            <h2 className={s.logo}>DIARY</h2>\n\n            <button className={s.logoutButton + ' btn btn-default'} onClick={() => props.logout(props.authToken)}>\n                Logout\n            </button>\n        </header>\n    )\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        authToken: state.auth.token\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        logout: (authToken) => dispatch(logout(authToken))\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)","import s from './RecordCard.module.css'\nimport React from 'react'\nimport {connect} from 'react-redux'\nimport {showReadRecordWindow} from \"../../../redux/reducers/showDetailedRecord\";\n\n\nconst RecordCard = (props) => {\n    return (\n        <div className={s.record} onClick={() => props.showThisWindow({title: props.title, body: props.body, created: props.created, id: props.id})}>\n            <h3>{props.title}</h3>\n            <p>{props.body}</p>\n        </div>\n    )\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        showThisWindow: ({title, body, created, id}) => dispatch(\n            showReadRecordWindow({title, body, created, id})\n        )\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        authToken: state.auth.token\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RecordCard);\n","import s from './addRecordCard.module.css'\nimport React from 'react'\nimport {connect} from 'react-redux'\nimport {showCreateRecordWindow } from \"../../../redux/reducers/showDetailedRecord\";\n\nconst AddRecordCard = (props) => {\n    return (\n        <div className={s.card} onClick={props.showThisWindow}>\n            <h1 className={s.add_sign}>&#x2B;</h1>\n        </div>\n    )\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        showThisWindow: () => dispatch(showCreateRecordWindow())\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        authToken: state.auth.token\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddRecordCard);","import s from './fullRecordBase.module.css'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport {hideDetailWindow} from \"../../../redux/reducers/showDetailedRecord\";\n\nconst FullRecordBase = (props) => {\n\n    return (\n        <div className={props.active ? `${s.overflow} ${s.active}` : s.overflow} onClick={() => props.hideWindow() }>\n            <div className={s.record} onClick={e => e.stopPropagation() }>\n                {props.child}\n            </div>\n        </div>\n    )\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        active: state.showHideRecord.fullRecordActive,\n        child: state.showHideRecord.detailWindowContent\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        hideWindow: () => dispatch(hideDetailWindow)\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FullRecordBase);","import React from 'react'\nimport s from './AnimatedRecordsLoading.module.css'\n\nlet AnimatedRecordsLoading = () => {\n    return (\n        <div className={s['lds-ellipsis']}>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n        </div>\n    )\n}\n\nexport default AnimatedRecordsLoading;","import s from './Records.module.css'\nimport React, {useEffect, useCallback, useRef} from 'react'\n\nimport RecordCard from \"./recordCard/RecordCard\";\nimport AddRecordCard from \"./addRecordCard/addRecordCard\";\nimport {connect} from 'react-redux'\nimport {fetchRecords} from '../../redux/reducers/allRecordReducer'\nimport FullRecordBase from \"./fullRecord/fullRecordBase\";\nimport AnimatedRecordsLoading from \"../some_stuff/loading_records_animation/AnimatedRecordsLoading\";\n\n\nconst Records = (props) => {\n    let observer = useRef()\n\n    let fetchNewRecords = () => {\n        props.fetchRecords(props.authToken, props.current_page);\n    }\n\n    let lastRecordRef = useCallback(node => {\n        if(props.loading)\n            return\n\n        if(observer.current) {\n            observer.current.disconnect()\n        }\n\n        observer.current = new IntersectionObserver(entries => {\n            if(entries[0].isIntersecting){\n                fetchNewRecords()\n            }\n        })\n\n        if (node)\n            observer.current.observe(node)\n    })\n\n    let render_records = () => {\n        if(props.records.length === 0){\n            fetchNewRecords()\n        } else {\n            return props.records.map((el, index) => {\n                if(index === props.records.length - 1) {\n                    return (\n                        <div ref={lastRecordRef}>\n                            <RecordCard title={el.title} body={el.body} created={el.created} id={el.id} />\n                        </div>\n                    )\n                }\n                else {\n                    return (\n                        <div>\n                            <RecordCard title={el.title} body={el.body} created={el.created} id={el.id} />\n                        </div>\n                    )\n                }\n            })\n        }\n    }\n\n    return (\n        <div className={s.records}>\n            <FullRecordBase />\n\n            <div className={s.recordsBlock}>\n                <AddRecordCard />\n\n                {\n                    render_records()\n                }\n\n            </div>\n\n            {props.loading && <AnimatedRecordsLoading/>}\n        </div>\n    )\n}\n\nlet mapStateToProps = (state) => {\n    return {\n    \trecords: state.records.records[0] ? state.records.records : [],\n        authToken: state.auth.token,\n        current_page: state.records.current_page,\n        loading: state.records.loading\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        fetchRecords: (token, page) => { dispatch(fetchRecords(token, page)) }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Records);\n","import React from 'react'\nimport Header from \"./header/header\";\nimport Records from \"../records/Records\";\n\n\nlet MainPage = () => {\n    return (\n        <div>\n            <Header />\n            <Records />\n        </div>\n    )\n}\n\nexport default MainPage;\n","import 'bootstrap/dist/css/bootstrap.css'\nimport {BrowserRouter, Redirect, Route} from 'react-router-dom'\nimport Register from \"./components/accounts/Register\";\nimport Login from \"./components/accounts/Login\";\nimport PrivateRout from \"./components/PrivateRout/PrivateRout\";\nimport {loadUser} from \"./redux/reducers/authReducers\";\nimport {useEffect} from \"react\";\nimport store from './redux/store'\nimport MainPage from \"./components/general/mainPage\";\n\n\nfunction App() {\n    useEffect(() => {\n        store.dispatch(loadUser())\n    })\n\n    return (\n        <BrowserRouter >\n            <div className=\"App\">\n                <PrivateRout exact path={'/'} component={MainPage} />\n                <Route exact path={'/register'} render={() => <Register />} />\n                <Route exact path={'/login'} render={() => <Login />} />\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux'\nimport store from './redux/store'\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n        document.getElementById('root')\n\n);\n\nreportWebVitals();\n"],"sourceRoot":""}